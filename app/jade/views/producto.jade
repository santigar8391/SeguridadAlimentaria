.hero-unit
  .container
    h1 PRODUCTOS
    .row
      .col-md-3.col-md-offset-9
        button.btn.btn-primary.btn-md.pull-right(type="button", data-toggle="modal", data-target="#nuevoProductoModal")
          i.glyphicon.glyphicon-plus-sign
          | &nbsp;&nbsp;Agregar Nuevo
    br
    div.gridStyles(ng-grid="gridOptions")

  //Formulario para Ingreso nuevo producto
  #nuevoProductoModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") &#215;
            span.sr-only Close
          h4#myModalLabel.modal-title Nuevo Producto.
          p#myModalLabel.modal-title Todos los campos son requeridos.
        .modal-body
          //Aqui va el contenido principal - Ingreso de propiedades del producto.
          form#nuevoProductoForm(name="nuevoProductoForm",data-toggle="validator", role="form")
            .row
              //Input de la descripcion del producto
              .form-group.col-sm-10(ng-class="{'has-error': nuevoProductoForm.descripcion.$invalid && nuevoProductoForm.descripcion.$dirty }")
                label(for="descripcion") Descripción
                .input-group
                  .input-group-addon
                    i.glyphicon.glyphicon-bookmark
                  input#descripcion.form-control(type="text", name="descripcion", ng-model="productoNuevo.descripcion", placeholder="Descripción o nombre del producto", maxlength="40", required)
                  span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="nuevoProductoForm.descripcion.$invalid && nuevoProductoForm.descripcion.$touched")
                span.help-block(ng-if="nuevoProductoForm.descripcion.$error.$invalid && nuevoProductoForm.descripcion.$touched") Campo inválido.
                span.help-block(ng-if="nuevoProductoForm.descripcion.$error.required && nuevoProductoForm.descripcion.$touched") La descripción es requerida.
            .row
              //Select de grupo
              .form-group.col-sm-10
                label(for="numGrupo") Grupo
                .input-group
                  .input-group-addon
                    i.glyphicon.glyphicon-th-list
                  select#numGrupo.form-control(ng-model="productoNuevo.numGrupo", ng-options="grupo.title for grupo in dataGrupo", ng-init="grupo.title=1", required)

            .row
              //Select de unidad
              .form-group.col-sm-6
                label(for="numUnidad") Unidad de medida
                .input-group
                  .input-group-addon
                    i.glyphicon.glyphicon-th-list
                  select#numUnidad.form-control(ng-model="productoNuevo.numUnidad", ng-init="milimetros", ng-options="unidad.int_id as unidad.str_descripcion for unidad in dataUnidad", required)
                    option(value="1", ng-selected="selected")
            .row
              //Input de número float - peso minimo
              .form-group.col-sm-6(ng-class="{'has-error': nuevoProductoForm.numMinimo.$invalid && nuevoProductoForm.numMinimo.$touched || nuevoProductoForm.numMinimo.$invalid && nuevoProductoForm.numMinimo.$dirty}")
                label(for="numMinimo") Peso mínimo
                .input-group
                  .input-group-addon
                    i.glyphicon.glyphicon-scale
                  input#numMinimo.form-control(type="number", name="numMinimo", ng-model="productoNuevo.numMinimo", min="0", max="999999999.99", step="0.1", placeholder="00.00", maxlength="12", required)
                  span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="nuevoProductoForm.numMinimo.$invalid && nuevoProductoForm.numMinimo.$touched")
                span.help-block(ng-if="nuevoProductoForm.numMinimo.$error.required && nuevoProductoForm.numMinimo.$touched") El peso mínimo es requerido.
                span.help-block(ng-if="nuevoProductoForm.numMinimo.$error.number && nuevoProductoForm.numMinimo.$touched") Solo se admite números reales positivos.
                span.help-block(ng-if="nuevoProductoForm.numMinimo.$error.maxlength && nuevoProductoForm.numMinimo.$touched") Solo se admite 12 caracteres (ejm. 123456789.12).
                span.help-block(ng-if="nuevoProductoForm.numMinimo.$error.max && nuevoProductoForm.numMinimo.$touched") Número máximo permitido es 999999999.99
            .row
              //Input de numero float - peso máximo
              .form-group.col-sm-6(ng-class="{'has-error': nuevoProductoForm.numMaximo.$invalid && nuevoProductoForm.numMaximo.$touched || nuevoProductoForm.numMinimo.$invalid && nuevoProductoForm.numMinimo.$dirty}")
                label(for="numMaximo") Peso máximo.
                .input-group
                  .input-group-addon
                    i.glyphicon.glyphicon-scale
                  input#numMaximo.form-control(type="number", name="numMaximo", ng-model="productoNuevo.numMaximo", min="0", max="999999999.99", step="0.1", placeholder="00.00", maxlength="12", required)
                  span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="nuevoProductoForm.numMaximo.$invalid && nuevoProductoForm.numMaximo.$touched")
                span.help-block(ng-if="nuevoProductoForm.numMaximo.$error.required && nuevoProductoForm.numMaximo.$touched") El peso máximo es requerido.
                span.help-block(ng-if="nuevoProductoForm.numMaximo.$error.number && nuevoProductoForm.numMaximo.$touched") Solo se admite números reales positivos.
                span.help-block(ng-if="nuevoProductoForm.numMaximo.$error.maxlength && nuevoProductoForm.numMaximo.$touched") Solo se admite 12 caracteres (ejm. 123456789.12).
                span.help-block(ng-if="nuevoProductoForm.numMaximo.$error.max && nuevoProductoForm.numMaximo.$touched") Número máximo permitido es 999999999.99
        .modal-footer
          button.btn.btn-default(type="button", data-dismiss="modal") Cancelar
          input.btn.btn-primary(type="submit", data-dismiss="modal", ng-click="tester(productoNuevo)", ng-disabled="nuevoProductoForm.descripcion.$invalid || nuevoProductoForm.numMinimo.$invalid || nuevoProductoForm.numMaximo.$invalid") Guardar

  //Formulario para verificacion de la eliminacion de un producto
  #eliminarProductoModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") &#215;
            span.sr-only Close
          h4#myModalLabel.modal-title Eliminar Producto.
        .modal-body
          p ¿Esta seguro que desea eliminar el producto&nbsp;
            strong
              | {{seleccion[0].Producto}}
            | ?
        .modal-footer
          button.btn.btn-default(type="button", data-dismiss="modal") Cancelar
          button.btn.btn-primary(type="button", data-dismiss="modal", ng-click="removeRow()") Eliminar

  //Formulario para editar un producto
  #editarProductoModal.modal.fade(tabindex="-1", role="dialog", aria-labelledby="myModalLabel", aria-hidden="true")
    .modal-dialog
      .modal-content
        .modal-header
          button.close(type="button", data-dismiss="modal")
            span(aria-hidden="true") &#215;
            span.sr-only Close
          h4#myModalLabel.modal-title Editar Producto.
          p#myModalLabel.modal-title Todos los campos son requeridos.
        .modal-body
          //Aqui va el contenido pricipal - Ingreso de propiedades del producto.
          form#editarProductoForm(name="editarProductoForm")
            //Input de la descripcion del producto
            .form-group(ng-class="{'has-error': editarProductoForm.descripcion.$invalid && editarProductoForm.descripcion.$dirty}")
              label(for="descripcion") Descripción
              .input-group
                .input-group-addon
                  i.glyphicon.glyphicon-bookmark
                input.form-control(type="text", name="descripcion", ng-required="true", id="descripcion", ng-model="editarproducto.descripcion")
                span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="editarProductoForm.descripcion.$invalid && editarProductoForm.descripcion.$dirty")
              span.help-block(ng-if="editarProductoForm.descripcion.$invalid && editarProductoForm.descripcion.$dirty") Campo inválido.

            //Select de grupo
            .form-group
              label(for="numGrupo") Grupo
              .input-group
                .input-group-addon
                  i.glyphicon.glyphicon-th-list
                select.form-control(ng-model="editarproducto.numGrupo", ng-options="grupo.title for grupo in dataGrupo", id="numGrupo")

            //Select de unidad
            .form-group
              label(for="numUnidad") Unidad de medida
              .input-group
                .input-group-addon
                  i.glyphicon.glyphicon-th-list
                select.form-control(ng-model="editarproducto.numUnidad", ng-options="unidad.str_descripcion for unidad in dataUnidad", id="numUnidad")

            //Input de numero float - peso minimo
            .form-group(ng-class="{'has-error': editarProductoForm.numMinimo.$invalid && editarProductoForm.numMinimo.$dirty}")
              label(for="numMinimo") Peso mínimo
              .input-group
                .input-group-addon
                  i.glyphicon.glyphicon-scale
                input.form.form-group-sm(type="number", name="numMinimo", id="numMinimo", ng-required="true", min="0", max="99", ng-model="editarproducto.numMinimo", placeholder="Peso mínimo...")
                span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="editarProductoForm.numMinimo.$invalid && editarProductoForm.numMinimo.$dirty")
              span.help-block(ng-if="editarProductoForm.numMinimo.$invalid && editarProductoForm.numMinimo.$dirty") Mínimo inválido.

            //Input de numero float - peso máximo
            .form-group(ng-class="{'has-error': editarProductoForm.numMaximo.$invalid && editarProductoForm.numMaximo.$dirty}")
              label(for="numMaximo") Peso máximo.
              .input-group
                .input-group-addon
                  i.glyphicon.glyphicon-scale
                input.form.form-group-sm(type="number", name="numMaximo", id="numMaximo", ng-required="true", min="0", max="99", ng-model="editarproducto.numMaximo", placeholder="Peso máximo...")
                span.glyphicon.glyphicon-remove.form-control-feedback(ng-if="editarProductoForm.numMaximo.$invalid && editarProductoForm.numMaximo.$dirty")
              span.help-block(ng-if="editarProductoForm.numMaximo.$invalid && editarProductoForm.numMaximo.$dirty") Máximo inválido.
        .modal-footer
          button.btn.btn-default(type="button", data-dismiss="modal") Cancelar
          button.btn.btn-primary(type="button", data-dismiss="modal", ng-click="editar(editarproducto)") Guardar